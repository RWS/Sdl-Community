<Window x:Class="Sdl.Community.DeepLMTProvider.UI.DeepLWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:model="clr-namespace:Sdl.Community.DeepLMTProvider.Model"
        xmlns:uiHelpers="clr-namespace:Sdl.Community.DeepLMTProvider.UI.UiHelpers"
        xmlns:viewModel="clr-namespace:Sdl.Community.DeepLMTProvider.ViewModel"
        xmlns:controls="clr-namespace:Sdl.Desktop.Platform.Controls.Controls;assembly=Sdl.Desktop.Platform.Controls"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=viewModel:DeepLWindowViewModel}"
        Icon="../Resources/deepLIcon.ico"
        WindowStyle="None"
        MaxWidth="600"
        MaxHeight="600"
        AllowsTransparency="False"
        WindowStartupLocation="CenterScreen"
        Title="{Binding Title}">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="UiHelpers/TextBlockStyle.xaml" />
                <ResourceDictionary Source="UiHelpers/ButtonsStyle.xaml" />
                <ResourceDictionary Source="UiHelpers/TextBoxStyle.xaml" />
                <ResourceDictionary Source="UiHelpers/WindowsBorder.xaml" />
                <ResourceDictionary Source="/Sdl.Desktop.Platform.Styles;component/Checkboxresources.xaml" />
                <ResourceDictionary Source="/Sdl.Desktop.Platform.Styles;component/datagridresources.xaml" />
                <ResourceDictionary Source="/Sdl.Desktop.Platform.Styles;component/BindablePasswordBoxStyle.xaml" />
                <ResourceDictionary Source="/Sdl.Desktop.Platform.Styles;component/TextBlockResources.xaml" />
                <ResourceDictionary Source="/Sdl.Desktop.Platform.Styles;component/buttonresources.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

            <Style TargetType="Image">
                <Setter Property="RenderOptions.BitmapScalingMode"
                        Value="HighQuality" />
            </Style>

        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <uiHelpers:WindowsControl  DockPanel.Dock="Top"
                                   EaseOfAccessEnabled="{Binding EaseOfAccessEnabled, Mode=TwoWay}"
                                   Grid.Row="0" />

        <TextBlock Style="{DynamicResource Sdl.TextBlock.TitleStyle}"
                   Grid.Row="1"
                   DockPanel.Dock="Top"
                   Margin="10,5,0,0"
                   VerticalAlignment="Center"
                   Text="Welcome to the DeepL Translation Provider. Please add your provider settings."
                   FontSize="15" />
        <StackPanel DockPanel.Dock="Top"
                    Grid.Row="2">
            <TextBlock Margin="10,10,10,5"
                       TextWrapping="WrapWithOverflow"
                       FontSize="12"
                       Visibility="{Binding ApiKeyBoxEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"
                       Text="The DeepL API is a paid machine translation service. Please purchase a DeepL subscription in order to get an API Key and use this service." />
            <TextBlock Text="Please enter your API Key below:"
                       Margin="10,0,10,10"
                       Visibility="{Binding ApiKeyBoxEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"
                       FontSize="12" />
            <controls:BindablePasswordBox Name="ApiKeyBox"
                                          Password="{Binding ApiKey, Mode=TwoWay}"
                                          Style="{StaticResource Sdl.BindablePasswordBox.GenericStyle}"
                                          Visibility="{Binding ApiKeyBoxEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"
                                          Margin="10,0,10,5" />
            <TextBlock Name="ApiKeyValidationBlock"
                       VerticalAlignment="Center"
                       Margin="10,0,0,0"
                       Text="{Binding ApiKeyValidationMessage, Mode=TwoWay}">
                <TextBlock.Style>
                    <Style TargetType="TextBlock"
                           BasedOn="{StaticResource Sdl.TextBlock.ErrorTitleStyle}">
                        <Setter Property="Visibility"
                                Value="Visible" />
                        <Style.Triggers>
                            <Trigger Property="Text"
                                     Value="{x:Null}">
                                <Setter Property="Visibility"
                                        Value="Collapsed" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <TextBlock Margin="10,0,0,5"
                       Visibility="{Binding ApiKeyBoxEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"
                       FontSize="12"> This API Key will then be used in all projects where you will be using the DeepL plug-in.</TextBlock>
            <TextBlock Margin="10,0,0,10"
                       Visibility="{Binding ApiKeyBoxEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"
                       Style="{StaticResource Sdl.TextBlock.HyperLinkTextStyle}">
					<Hyperlink NavigateUri="https://www.deepl.com/api-contact.html"
                               RequestNavigate="Hyperlink_OnRequestNavigate">
						Click here to obtain your API Key from DeepL
					</Hyperlink>
            </TextBlock>
            <!--<TextBlock Style="{DynamicResource Sdl.TextBlock.InformationTitleStyle}"
                       Text="Translation options"
                       Margin="10 0 0 5" />-->

            <GroupBox Header="Translation options" Margin="10 0 10 5">
                <StackPanel Margin="0 5 0 5">
                    <TextBlock Text="Before translation processing"
                               Style="{StaticResource Sdl.TextBlock.SubtitleStyle}"
                               Margin="10 0 0 5" />

                    <CheckBox Style="{StaticResource Sdl.Checkbox.GenericStyle}"
                              VerticalContentAlignment="Center"
                              Name="PlainText"
                              IsChecked="{Binding SendPlainText}"
                              Content="Send source as plain text"
                              Margin="15,0,0,5" />
                    
                </StackPanel></GroupBox>
        </StackPanel>

        <DataGrid ItemsSource="{Binding LanguagePairOptions, Mode=TwoWay}"
                  CanUserAddRows="False"
                  DockPanel.Dock="Top"
                  AutomationProperties.Name="Language Pair Options"
                  Margin="10 10"
                  Grid.Row="3"
                  Style="{StaticResource Sdl.DataGrid.GenericStyle}"
                  CanUserDeleteRows="False"
                  AutoGenerateColumns="False">

            <DataGrid.Columns>
                <DataGridTemplateColumn Header="Language Pair"
                                        IsReadOnly="True"
                                        SortMemberPath="LanguagePair.TargetCultureName"
                                        Width="*">

                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock>
                                <TextBlock.Text>
                                    <MultiBinding StringFormat=" {0} -> {1}">
                                        <Binding Path="LanguagePair.SourceCultureName" />
                                        <Binding Path="LanguagePair.TargetCultureName" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Formality"
                                        SortMemberPath="Formality"
                                        Width="*">

                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>

                            <ComboBox ItemsSource="{Binding Source={x:Static model:FormalityEnumHelper.Values}}"
                                      SelectedItem="{Binding Formality, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      DisplayMemberPath="."
                                      Cursor="Hand" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Glossary"
                                        SortMemberPath="Glossary"
                                        Width="*">

                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <ComboBox ItemsSource="{Binding Glossaries}"
                                          Cursor="Hand"
                                          HorizontalContentAlignment="Center"
                                          SelectedItem="{Binding SelectedGlossary, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                          DisplayMemberPath="Name">
                                    <ComboBox.Style>
                                        <Style TargetType="ComboBox"
                                               BasedOn="{StaticResource {x:Type ComboBox}}">
                                            <Setter Property="Visibility"
                                                    Value="Visible" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Glossaries.Count}"
                                                             Value="1">
                                                    <Setter Property="Visibility"
                                                            Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ComboBox.Style>
                                </ComboBox>
                                <TextBlock Text="No glossary available"
                                           HorizontalAlignment="Center">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock"
                                               BasedOn="{StaticResource {x:Type TextBlock}}">
                                            <Setter Property="Visibility"
                                                    Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Glossaries.Count}"
                                                             Value="1">
                                                    <Setter Property="Visibility"
                                                            Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>

        <DockPanel LastChildFill="False"
                   Grid.Row="4"
                   DockPanel.Dock="Bottom"
                   Margin="10 5 10 5">
            <Button Style="{StaticResource Sdl.Button.SecondaryStyle}"
                    Content="Manage glossaries"
                    DockPanel.Dock="Left"
                    Command="{Binding ManageGlossariesCommand}"
                    Cursor="Hand" />

            <Button Style="{StaticResource Sdl.Button.SecondaryStyle}"
                    IsCancel="True"
                    Content="Cancel"
                    DockPanel.Dock="Right"
                    Margin="5,0,0,0"
                    Cursor="Hand" />
            <Button Style="{StaticResource Sdl.Button.PrimaryStyle}"
                    Content="OK"
                    Command="{Binding OkCommand}"
                    Click="Ok_Click"
                    DockPanel.Dock="Right"
                    Cursor="Hand" />
        </DockPanel>
    </Grid>
</Window>