<Window x:Class="Sdl.Community.DeepLMTProvider.UI.GlossariesWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:tradosControls="http://schemas.trados.com/xaml"
        xmlns:controls="clr-namespace:Sdl.Community.DeepLMTProvider.UI.Controls"
        xmlns:converters="clr-namespace:Sdl.Community.DeepLMTProvider.UI.Converters"
        xmlns:uiHelpers="clr-namespace:Sdl.Community.DeepLMTProvider.UI.UiHelpers"
        xmlns:viewModel="clr-namespace:Sdl.Community.DeepLMTProvider.ViewModel"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=viewModel:GlossariesWindowViewModel}"
        d:DesignHeight="450"
        Title="DeepL Glossaries"
        Icon="../Resources/deepL_logo_new.png"
        MaxHeight="600"
        MinWidth="425"
        MinHeight="172"
        Name="Glossaries_Window"
        Width="435"
        WindowStartupLocation="CenterScreen"
        WindowStyle="None">

    <Window.InputBindings>
        <KeyBinding Key="E"
                    Modifiers="Alt"
                    Command="{Binding EditGlossaryCommand}" />
        <KeyBinding Key="Q"
                    Modifiers="Alt"
                    Command="{Binding ImportGlossariesCommand}" />
        <KeyBinding Key="Delete"
                    Command="{Binding DeleteGlossariesCommand}" />
        <KeyBinding Key="Escape"
                    Command="{Binding EscapeCommand, ElementName=Glossaries_Window}" />
        <KeyBinding Key="A"
                    Modifiers="Alt"
                    Command="{Binding AddNewGlossaryCommand}" />
        <KeyBinding Key="X"
                    Modifiers="Alt"
                    Command="{Binding ExportCommand, ElementName=Glossaries_Window}" />
    </Window.InputBindings>

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="UiHelpers/TextBlockStyle.xaml" />
                <ResourceDictionary Source="UiHelpers/TextBoxStyle.xaml" />
                <ResourceDictionary Source="UiHelpers/WindowsBorder.xaml" />
                <ResourceDictionary Source="UiHelpers/General.xaml" />
                <ResourceDictionary Source="/Sdl.Desktop.Platform.Styles;component/buttonresources.xaml" />
                <ResourceDictionary Source="/Sdl.Desktop.Platform.Styles;component/datagridresources.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <Style TargetType="Image">
                <Setter Property="RenderOptions.BitmapScalingMode"
                        Value="HighQuality" />
            </Style>

            <Style TargetType="Button"
                   BasedOn="{StaticResource Sdl.Button.EmbeddedStyle}">
            </Style>

            <converters:AddAllItemConverter x:Key="AddAllItemConverter" />
        </ResourceDictionary>
    </Window.Resources>
    <Grid Margin="5">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <uiHelpers:WindowsControl  DockPanel.Dock="Top"
                                   Grid.Row="0" />

        <StackPanel Grid.Row="1"
                    HorizontalAlignment="Left"
                    Margin="6 10 0 0"
                    Orientation="Horizontal">

            <TextBlock Text="Show"
                       VerticalAlignment="Top" />
            <ComboBox ItemsSource="{Binding SupportedLanguagePairs, Converter={StaticResource AddAllItemConverter}}"
                      SelectedItem="{Binding SelectedLanguagePair}"
                      Name="SelectedLP_ComboBox"
                      VerticalAlignment="Top"
                      DisplayMemberPath="."
                      Margin="10 0 0 0" />
        </StackPanel>

        <controls:ClearButtonTextBox Grid.Row="1"
                                     x:Name="Filter_TextBox"
                                     Text="{Binding FilterQuery, Mode=TwoWay}"
                                     Height="20"
                                     Margin="0 0 0 -10"
                                     HorizontalAlignment="Right" />

        <DataGrid Grid.Row="2"
                  AutoGenerateColumns="False"
                  Margin="0 5 0 0"
                  AutomationProperties.Name="Glossaries"
                  CanUserDeleteRows="False"
                  CanUserSortColumns="True"
                  SelectionMode="Single"
                  SelectedItem="{Binding SelectedGlossary}"
                  ItemsSource="{Binding Glossaries, Mode=TwoWay}"
                  d:ItemsSource="{d:SampleData}">

            <DataGrid.InputBindings>
                <KeyBinding Key="Delete"
                            Command="{Binding DeleteGlossariesCommand}" />
            </DataGrid.InputBindings>

            <DataGrid.Style>
                <Style TargetType="DataGrid"
                       BasedOn="{StaticResource Sdl.DataGrid.GenericStyle}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsLoading}"
                                     Value="True">
                            <Setter Property="IsEnabled"
                                    Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.Style>

            <DataGrid.Resources>
                <DataTemplate x:Key="CheckAllHeaderTemplate">
                    <CheckBox HorizontalContentAlignment="Center"
                              IsChecked="{Binding DataContext.IsCheckAll, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ElementName=Glossaries_Window}"
                              VerticalAlignment="Center" />
                </DataTemplate>
            </DataGrid.Resources>
            <DataGrid.Columns>

                <DataGridCheckBoxColumn Width="Auto"
                                        HeaderTemplate="{StaticResource CheckAllHeaderTemplate}"
                                        Binding="{Binding IsChecked, UpdateSourceTrigger=PropertyChanged}">
                    <DataGridCheckBoxColumn.Header>
                        <Style TargetType="DataGridColumnHeader"
                               BasedOn="{StaticResource Sdl.DataGridColumnHeader.GenericStyle}">
                            <Setter Property="HorizontalAlignment"
                                    Value="Center" />
                        </Style>
                    </DataGridCheckBoxColumn.Header>
                </DataGridCheckBoxColumn>

                <DataGridTemplateColumn Header="Glossary Name"
                                        SortMemberPath="Name"
                                        Width="3*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <controls:EditableTextBlock Margin="5 0 0 0"
                                                        Text="{Binding Name}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Source language"
                                        SortMemberPath="SourceLanguage"
                                        Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding SourceLanguage}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Target language"
                                        SortMemberPath="TargetLanguage"
                                        Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding TargetLanguage}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Width="Auto">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Content="📝"
                                    AutomationProperties.Name="Edit glossary"
                                    ToolTip="Edit glossary (Alt+E)"
                                    Command="{Binding DataContext.EditGlossaryCommand, ElementName=Glossaries_Window}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        <StackPanel Grid.Row="3"
                    HorizontalAlignment="Left"
                    Orientation="Horizontal">

            <Button DockPanel.Dock="Left"
                    Margin="0 0 2 0"
                    AutomationProperties.Name="Add new glossary"
                    ToolTip="Add new glossary (Alt+A)"
                    Command="{Binding AddNewGlossaryCommand}"
                    Content="➕" />

            <Button Content="📂"
                    Margin="0 0 5 0"
                    AutomationProperties.Name="Import glossaries"
                    FontSize="18"
                    Command="{Binding ImportGlossariesCommand}"
                    HorizontalAlignment="Center">
                <Button.ToolTip>
                    <TextBlock>
                         Import glossaries (Alt+Q)
                         <LineBreak />
                         While importing, ensure unique filenames to avoid duplicates, which will be ignored.
                    </TextBlock>
                </Button.ToolTip>
            </Button>

            <Button Margin="0 0 5 0"
                    Height="25"
                    Name="Export_Button"
                    AutomationProperties.Name="Export glossaries"
                    Click="ExportButton_Click"
                    ToolTip="Export selected glossaries (Alt+X)">

                <Button.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="TSV"
                                  Command="{Binding ExportGlossariesCommand}"
                                  CommandParameter="TSV" />
                        <MenuItem Header="CSV"
                                  Command="{Binding ExportGlossariesCommand}"
                                  CommandParameter="CSV" />
                    </ContextMenu>
                </Button.ContextMenu>

                <Path Data="F1 M512,512z M0,0z M421.24,269.93L451.24,269.93 451.24,429.84A48.72,48.72,0,0,1,402.58,478.5L82.77,478.5A48.72,48.72,0,0,1,34.11,429.84L34.11,110A48.72,48.72,0,0,1,82.77,61.37L242.68,61.37 242.68,91.37 82.77,91.37A18.68,18.68,0,0,0,64.11,110L64.11,429.84A18.68,18.68,0,0,0,82.77,448.5L402.58,448.5A18.68,18.68,0,0,0,421.24,429.84z M352.24,33.5L352.24,63.5 426.64,63.5 249.5,240.68 270.71,261.89 447.89,84.71 447.89,159.11 477.89,159.11 477.89,33.5z"
                      Height="18"
                      Margin="0 0 5 -2"
                      Stretch="Uniform"
                      StrokeThickness="0.1">
                    <Path.Style>
                        <Style TargetType="Path">
                            <Setter Property="Fill"
                                    Value="Black" />
                            <Setter Property="Stroke"
                                    Value="Black" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMouseOver, ElementName=Export_Button}"
                                             Value="True">
                                    <Setter Property="Fill"
                                            Value="Red" />
                                    <Setter Property="Stroke"
                                            Value="Red" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Path.Style>
                </Path>
            </Button>

            <Button Content="🗑️"
                    Margin="-5 0 0 0"
                    Click="DeleteButton_Click"
                    AutomationProperties.Name="Delete glossary"
                    ToolTip="Delete selected glossaries (Delete)"
                    FontSize="16"
                    HorizontalAlignment="Center" />
        </StackPanel>

        <Button Content="Cancel"
                Margin="0 0 5 0"
                HorizontalAlignment="Center"
                Grid.Row="3"
                Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}"
                Command="{Binding CancelCommand}"
                ToolTip="Cancel operation" />

        <Button Content="OK"
                Name="Ok_Button"
                Grid.Row="3"
                HorizontalAlignment="Right"
                Click="OkButton_Click"
                Style="{StaticResource Sdl.Button.PrimaryStyle}"
                Height="25"
                IsDefault="True" />

        <tradosControls:CustomProgressRing Grid.Row="2"
                                           HorizontalAlignment="Center"
                                           Name="ProgressBar"
                                           Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}"
                                           VerticalContentAlignment="Center"
                                           Foreground="Teal"
                                           Text=""
                                           SpinnerThickness="10"
                                           Width="100" />
    </Grid>
</Window>