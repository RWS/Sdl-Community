<Window x:Class="Sdl.Community.XmlReader.WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Sdl.Community.XmlReader.WPF"
        xmlns:vm="clr-namespace:Sdl.Community.XmlReader.WPF.ViewModels"
        mc:Ignorable="d"
        Title="Xml Reader" Height="485.034" Width="639.832"
        Closing="MainWindow_Closing" FontSize="14">

	<Window.Resources>
		<Style x:Key="labelStyle" TargetType="{x:Type Label}">
			<Setter Property="FontSize" Value="16"/>
			<Setter Property="FontFamily" Value="Arial"/>
			<Setter Property="FontWeight" Value="Bold"/>
		</Style>
		<Style x:Key="buttonStyle" TargetType="{x:Type Button}">
			<Setter Property="FontSize" Value="16"/>
			<Setter Property="FontFamily" Value="Arial"/>
			<Setter Property="FontWeight" Value="Bold"/>
			<Setter Property="Background" Value="#5078C8"/>
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="Margin" Value="2"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border Name="border" 
                            BorderThickness="2"
                            Padding="4,2" 
                            BorderBrush="#FFFF" 
                            CornerRadius="3" 
                            Background="{TemplateBinding Background}">
							<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="border" Property="BorderBrush" Value="#4682B4" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="TreeViewItemFocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Fill" Color="#FF595959"/>
		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Stroke" Color="#FF262626"/>
		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Stroke" Color="#FF27C7F7"/>
		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Fill" Color="#FFCCEEFB"/>
		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Stroke" Color="#FF1CC4F7"/>
		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Fill" Color="#FF82DFFB"/>
		<PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>
		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Fill" Color="#FFFFFFFF"/>
		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Stroke" Color="#FF818181"/>
		<Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="Width" Value="16"/>
			<Setter Property="Height" Value="16"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ToggleButton}">
						<Border Background="Transparent" Height="16" Padding="5,5,5,5" Width="16">
							<Path x:Name="ExpandPath" Data="{StaticResource TreeArrow}" Fill="{StaticResource TreeViewItem.TreeArrow.Static.Fill}" Stroke="{StaticResource TreeViewItem.TreeArrow.Static.Stroke}">
								<Path.RenderTransform>
									<RotateTransform Angle="135" CenterY="3" CenterX="3"/>
								</Path.RenderTransform>
							</Path>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsChecked" Value="True">
								<Setter Property="RenderTransform" TargetName="ExpandPath">
									<Setter.Value>
										<RotateTransform Angle="180" CenterY="3" CenterX="3"/>
									</Setter.Value>
								</Setter>
								<Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}"/>
								<Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}"/>
								<Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}"/>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsMouseOver" Value="True"/>
									<Condition Property="IsChecked" Value="True"/>
								</MultiTrigger.Conditions>
								<Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}"/>
								<Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}"/>
							</MultiTrigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style TargetType="{x:Type TreeViewItem}" x:Key="TreeViewItemStyle">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="Padding" Value="1,0,0,0"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TreeViewItem}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition MinWidth="19" Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition/>
							</Grid.RowDefinitions>
							<ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpandCollapseToggleStyle}"/>
							<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
								<ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							</Border>
							<ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsExpanded" Value="false">
								<Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
							</Trigger>
							<Trigger Property="HasItems" Value="false">
								<Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
					<Setter Property="ItemsPanel">
						<Setter.Value>
							<ItemsPanelTemplate>
								<VirtualizingStackPanel/>
							</ItemsPanelTemplate>
						</Setter.Value>
					</Setter>
				</Trigger>
			</Style.Triggers>
		</Style>
	</Window.Resources>

	<Grid Margin="0,0,0,0">
		<Grid.RowDefinitions>
			<RowDefinition Height="1*"/>
			<RowDefinition Height="9*"/>
			<RowDefinition Height="1*"/>
			<RowDefinition Height="1*"/>
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="6*"/>
			<ColumnDefinition Width="4*"/>
		</Grid.ColumnDefinitions>
		<Label Style="{StaticResource labelStyle}">Reports</Label>
		<GroupBox Grid.Row="1" Grid.RowSpan ="2" Name="XmlFiles" Header="Group by languages">
			<local:MultiSelectTreeView BorderThickness="0" ItemsSource="{Binding XmlFiles}" AllowDrop="True" Drop="treeView_Drop" DragEnter="treeView_DragEnter">
				<TreeView.ContextMenu>
					<ContextMenu>
						<MenuItem Header="Delete" Click="treeView_RemoveItems"></MenuItem>
					</ContextMenu>
				</TreeView.ContextMenu>
				<TreeView.ItemContainerStyle>
					<Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource TreeViewItemStyle}">
						<Setter Property="IsExpanded" Value="True"/>
						<Setter Property="local:MultiSelectTreeView.IsItemSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
						<Setter Property="FontWeight" Value="Normal"/>
						<Style.Triggers>
							<Trigger Property="local:MultiSelectTreeView.IsItemSelected" Value="True">
								<Setter Property="Background" Value="SkyBlue" />
							</Trigger>
						</Style.Triggers>
					</Style>
				</TreeView.ItemContainerStyle>
				<TreeView.Resources>
					<HierarchicalDataTemplate DataType="{x:Type vm:TargetLanguageCodeViewModel}" ItemsSource="{Binding Children}">
						<StackPanel Orientation="Horizontal">
							<Image Source="{Binding IconUri, Mode=OneWay}" Height="16" Width="20"/>
							<TextBlock Text="{Binding TargetLanguageCode}" Margin="5 0 0 0"/>
						</StackPanel>
					</HierarchicalDataTemplate>
					<DataTemplate DataType="{x:Type vm:AnalyzeFileViewModel}">
						<StackPanel Orientation="Horizontal">
							<TextBlock Text="{Binding AnalyzeFileName}"/>
						</StackPanel>
					</DataTemplate>
				</TreeView.Resources>
			</local:MultiSelectTreeView>
		</GroupBox>
		<Button Style="{StaticResource buttonStyle}" Background="{Binding ClearColor}" Grid.Row="3" IsEnabled="{Binding IsClearEnabled}" Command="{Binding ClearCommand}">Clean all</Button>
		<Label Grid.Column="1" Style="{StaticResource labelStyle}">Instructions</Label>
		<TextBlock Grid.Row="1" Grid.Column="1" TextWrapping="Wrap" Margin="0,10,0,0" Text="Drag and drop your xml analysis files into the pane on the left. Select language(s) and  click on Generate excel button to generate your report."></TextBlock>
		<Label Grid.Column="1" Grid.Row="2" Foreground="#5078C8" Visibility="{Binding MessageVisibility}">Please wait until reports are generated</Label>
		<Button Style="{StaticResource buttonStyle}" Background="{Binding GenerateColor}" Grid.Row="3" IsEnabled="{Binding IsGenerateEnabled}" Grid.Column="1" Command="{Binding GenerateExcelCommand}">Generate excel</Button>
	</Grid>
</Window>
