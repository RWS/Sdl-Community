<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="General.xaml"/>
	</ResourceDictionary.MergedDictionaries>


    <Style x:Key="FocusVisualForGlyphToggleButton">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2"
                               StrokeDashArray="1 2"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               SnapsToDevicePixels="true"
                               StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="Button.Static.Background"
                     Color="#FFDDDDDD" />
    <SolidColorBrush x:Key="Button.Static.Border"
                     Color="#FF707070" />
    <SolidColorBrush x:Key="Button.MouseOver.Background"
                     Color="#FFBEE6FD" />
    <SolidColorBrush x:Key="Button.MouseOver.Border"
                     Color="#FF3C7FB1" />
    <SolidColorBrush x:Key="Button.Pressed.Background"
                     Color="#FFC4E5F6" />
    <SolidColorBrush x:Key="Button.Pressed.Border"
                     Color="#FF2C628B" />
    <SolidColorBrush x:Key="Button.Disabled.Background"
                     Color="#FFF4F4F4" />
    <SolidColorBrush x:Key="Button.Disabled.Border"
                     Color="#FFADB2B5" />
    <SolidColorBrush x:Key="Button.Disabled.Foreground"
                     Color="#FF838383" />
    <Style x:Key="GlyphToggleButtonStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource FocusVisualForGlyphToggleButton}" />
        <Setter Property="Background"
                Value="{StaticResource Button.Static.Background}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource Button.Static.Border}" />
        <Setter Property="Foreground"
                Value="Gray" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
               
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="Button.IsDefaulted"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Foreground" Value="Red"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource Button.Disabled.Background}" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource Button.Disabled.Border}" />
                            <Setter Property="TextElement.Foreground"
                                    TargetName="contentPresenter"
                                    Value="{StaticResource Button.Disabled.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ToggleButton}" x:Key="IOSToggleButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Viewbox>
                        <Border x:Name="Border"
                                CornerRadius="10"
                                Background="#FFFFFFFF"
                                Width="40"
                                Height="20">
                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="0.5"
                                                  Direction="0"
                                                  Opacity="0.3" />
                            </Border.Effect>
                            <Ellipse x:Name="Ellipse"
                                     Fill="#FFFFFFFF"
                                     Stretch="Uniform"
                                     Margin="2 1 2 1"
                                     Stroke="Gray"
                                     StrokeThickness="0.2"
                                     HorizontalAlignment="Stretch">
                                <Ellipse.Effect>
                                    <DropShadowEffect BlurRadius="10"
                                                      ShadowDepth="1"
                                                      Opacity="0.3"
                                                      Direction="260" />
                                </Ellipse.Effect>
                            </Ellipse>
                        </Border>
                    </Viewbox>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Checked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="Border"
                                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                    To="CornflowerBlue"
                                                    Duration="0:0:0.1" />
                                    <ThicknessAnimation Storyboard.TargetName="Ellipse"
                                                        Storyboard.TargetProperty="Margin"
                                                        To="20 1 2 1"
                                                        Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Unchecked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="Border"
                                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                    To="DarkGreen"
                                                    Duration="0:0:0.1" />
                                    <ThicknessAnimation Storyboard.TargetName="Ellipse"
                                                        Storyboard.TargetProperty="Margin"
                                                        To="2 1 2 1"
                                                        Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Window Control Button Style-->
	<Style x:Key="WindowControlButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="Foreground" Value="{DynamicResource WindowsControl.Command.Forground}"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="HorizontalContentAlignment" Value="Center" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border x:Name="Border" TextBlock.Foreground="{TemplateBinding Foreground}" BorderThickness="1,0,1,1" BorderBrush="Transparent" Background="Transparent">
						<ContentPresenter Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="False" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Border" Property="Background" Value="{DynamicResource WindowsControl.Command.Highlight}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="Border" Property="Background" Value="{DynamicResource WindowsControl.Command.Active}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Foreground" Value="{DynamicResource WindowsControl.Command.Highlight.Text}" />
			</Trigger>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Foreground"  Value="{DynamicResource WindowsControl.Command.Active.Text}" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Visibility" Value="Collapsed" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<!--Button Style-->
	<Style x:Key="FocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style x:Key="TransparentButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Foreground" Value="#414141" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="FontSize" Value="16" />
		<Setter Property="HorizontalAlignment" Value="Right" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="Margin" Value="0,0,10,0" />
		<Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate x:Uid="ControlTemplate_2" TargetType="{x:Type Button}">
					<Border x:Uid="Border_1" Name="Chrome"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
						<ContentPresenter x:Uid="ContentPresenter_1" Name="Presenter" Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger x:Uid="Trigger_5" Property="IsEnabled" Value="False">
							<Setter x:Uid="Setter_24" Property="Background" Value="Transparent" />
							<Setter x:Uid="Setter_25" Property="Cursor" Value="Arrow" />
							<Setter x:Uid="Setter_26" Property="Foreground" Value="Black" />
						</Trigger>
						<Trigger x:Uid="Trigger_6" Property="IsMouseOver" Value="True">
							<Setter x:Uid="Setter_27" Property="Opacity" Value="0.5" />
							<Setter x:Uid="Setter_28" Property="RenderTransformOrigin" Value="0.557,0.693" />
						</Trigger>
						<Trigger x:Uid="Trigger_7" Property="IsPressed" Value="True">
							<Setter x:Uid="Setter_29" Property="Background" Value="Transparent" />
							<Setter x:Uid="Setter_30" Property="BorderBrush" Value="Transparent" />
						</Trigger>
						<Trigger x:Uid="Trigger_8" Property="IsFocused" Value="true">
							<Setter x:Uid="Setter_31" TargetName="Chrome" Property="BorderBrush" Value="LightGray" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>