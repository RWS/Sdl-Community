<Window x:Class="InterpretBank.SettingsService.UI.SettingsMain"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewModel="clr-namespace:InterpretBank.SettingsService.ViewModel"
        xmlns:styles="clr-namespace:InterpretBank.Styles"
        xmlns:interpretBank="clr-namespace:InterpretBank"
        xmlns:converters="clr-namespace:InterpretBank.SettingsService.Converters"
        WindowStyle="None"
        xmlns:controls="clr-namespace:InterpretBank.Controls"
        xmlns:converters1="clr-namespace:InterpretBank.Converters"
        xmlns:multiItemSelect="clr-namespace:InterpretBank.Controls.MultiItemSelect"
        xmlns:model="clr-namespace:InterpretBank.SettingsService.Model"
        MouseDown="Window_MouseDown"
        mc:Ignorable="d"
        x:Name="Root"
        d:DataContext="{d:DesignInstance viewModel:SettingsService}"
        Title="InterpretBank settings"
        SizeToContent="Height"
        WindowStartupLocation="CenterScreen"
        Height="Auto"
        MinWidth="533"
        MinHeight="450"
        Width="600">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/InterpretBank;component/Styles/WindowsBorder.xaml" />
                <ResourceDictionary Source="/Sdl.Desktop.Platform.Styles;component/ButtonResources.xaml" />
                <ResourceDictionary Source="/InterpretBank;component/Styles/SettingsResources.xaml" />
                <ResourceDictionary Source="/InterpretBank;component/SettingsService/Styles/SettingsMainResources.xaml" />
                <ResourceDictionary Source="/Sdl.Desktop.Platform.Controls;component/Controls/WatermarkTextBox/WatermarkTextBoxResources.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="GroupBox"
                   BasedOn="{StaticResource {x:Type GroupBox}}">
                <Setter Property="Margin"
                        Value="10" />
                <Setter Property="Padding"
                        Value="10" />
            </Style>

            <converters:NullStringToVisibilityConverter x:Key="NullToVisibilityConverter" />
            <converters1:RatioConverter x:Key="RatioConverter" />
        </ResourceDictionary>
    </Window.Resources>

    <Grid Margin="0,0,0,0">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>


        <Image Grid.Row="0"
               Height="50"
               Margin="0 25 0 20"
               Source="../../Resources/logo.png" />

        <!--Filepath field-->
        <GroupBox Grid.Row="1"
                  Padding="0"
                  HorizontalAlignment="Left"
                  Header="Locate database">
            <DockPanel HorizontalAlignment="Stretch"
                       VerticalAlignment="Top">

                <controls:ChooseFilepathControl AutomationProperties.Name="Recently used"
                                                Filepath="{Binding Filepath, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />

            </DockPanel>
        </GroupBox>

        <GroupBox Grid.Row="2"
                  Header="Select glossaries">


            <DockPanel LastChildFill="False">
                <StackPanel KeyboardNavigation.DirectionalNavigation="Cycle"
                            DockPanel.Dock="Top"
                            KeyboardNavigation.TabNavigation="Once">
                    <RadioButton Content="By glossary names"
                                 x:Name="UseGlossariesButton"
                                 AutomationProperties.PositionInSet="1"
                                 AutomationProperties.SizeOfSet="2"
                                 GroupName="Use glossaries or tags">
                        <RadioButton.Style>
                            <Style TargetType="RadioButton">
                                <Setter Property="IsChecked"
                                        Value="True" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=UseTagsButton, Path=IsChecked}"
                                                 Value="True">
                                        <Setter Property="IsChecked"
                                                Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </RadioButton.Style>
                    </RadioButton>
                    <RadioButton Content="By tags"
                                 x:Name="UseTagsButton"
                                 AutomationProperties.PositionInSet="2"
                                 AutomationProperties.SizeOfSet="2"
                                 IsChecked="{Binding UseTags}"
                                 GroupName="Use glossaries or tags" />
                </StackPanel>


                <multiItemSelect:MultiItemSelectControl x:Name="TagsMultiselectCombobox"
                                                        DockPanel.Dock="Bottom"
                                                        Margin="0 5 0 0"
                                                        IsTabStop="True"
                                                        AutomationProperties.Name="{Binding  SelectedItems.Count, StringFormat='Selected: {0}', RelativeSource={RelativeSource Self}}"
                                                        ItemsSource="{Binding Tags, UpdateSourceTrigger=PropertyChanged}"
                                                        Visibility="{Binding IsChecked, ElementName=UseTagsButton, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=True}"
                                                        CornerRadius="0"
                                                        HorizontalAlignment="Stretch"
                                                        BorderBrush="#c0c0c0"
                                                        SelectedItems="{Binding SelectedTags, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                        BorderBackground="White"
                                                        VerticalAlignment="Top">
                    <multiItemSelect:MultiItemSelectControl.InputBindings>
                        <KeyBinding Command="Delete" Key="Delete"/>
                    </multiItemSelect:MultiItemSelectControl.InputBindings>
                    <multiItemSelect:MultiItemSelectControl.SelectedItemTemplate>
                        <DataTemplate DataType="{x:Type model:TagModel}">

                            <TextBlock Text="{Binding TagName}"
                                       FontSize="10"
                                       AutomationProperties.Name="{Binding TagName, StringFormat={}{0} Press DELETE to unselect}"
                                       VerticalAlignment="Center" />
                        </DataTemplate>
                    </multiItemSelect:MultiItemSelectControl.SelectedItemTemplate>
                    <multiItemSelect:MultiItemSelectControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type model:TagModel}">

                            <TextBlock Text="{Binding TagName}"
                                       FontSize="10"
                                       VerticalAlignment="Center"
                                       DockPanel.Dock="Right" />
                        </DataTemplate>
                    </multiItemSelect:MultiItemSelectControl.ItemTemplate>
                </multiItemSelect:MultiItemSelectControl>

                <!--<controls:GlossariesOrTagsControl BorderThickness="0"
                                                  Height="Auto"
                                                  x:Name="SettingsUi"
                                                  DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=Window}}"
                                                  Visibility="{Binding Filepath, Converter={StaticResource NullToVisibilityConverter}}" />-->
            </DockPanel>
        </GroupBox>

        <StackPanel Grid.Row="3"
                    Orientation="Horizontal"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Bottom">
            <Button Content="Cancel"
                    Cursor="Hand"
                    Width="120"
                    IsCancel="True"
                    Height="30"
                    Style="{StaticResource Sdl.Button.SecondaryStyle}"
                    DockPanel.Dock="Right"
                    Margin="0 0 10 10" />

            <Button Content="OK"
                    Cursor="Hand"
                    Width="120"
                    Command="{Binding SaveCommand}"
                    Click="ButtonBase_OnClick"
                    Height="30"
                    Style="{StaticResource Sdl.Button.PrimaryStyle}"
                    DockPanel.Dock="Right"
                    Margin="0 0 10 10" />
        </StackPanel>
    </Grid>
</Window>