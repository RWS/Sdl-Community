<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:local="clr-namespace:LanguageWeaverProvider.Controls"
					xmlns:converters="clr-namespace:LanguageWeaverProvider.Converters">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="../Controls/WatermarkTextBoxResources.xaml" />
		<ResourceDictionary Source="/Sdl.Desktop.Platform.Styles;component/ButtonResources.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<converters:EmptyStringToVisibilityConverter x:Key="StringConverter" />
	<converters:BooleanToVisibilityConverter x:Key="BooleanConverter" />
	<converters:MultiBooleanToVisibilityConverter x:Key="MultiBooleanConverter" />
	<converters:BoolToBrushConverter x:Key="BrushConverter"
									 TrueBrush="#4ed164"
									 FalseBrush="#eaeaea" />

	<Style x:Key="SwitchCheckBoxStyle"
		   TargetType="CheckBox">
		<Setter Property="FontFamily"
				Value="Cascadia Code SemiBold" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="CheckBox">
					<Grid>
						<Border x:Name="BackgroundBorder"
								Width="56"
								Height="24"
								CornerRadius="8"
								Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsChecked, Converter={StaticResource BrushConverter}}"
								Cursor="Hand"
								BorderThickness="1"
								BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsChecked, Converter={StaticResource BrushConverter}}">
							<Border.Effect>
								<DropShadowEffect x:Name="BackgroundBorderShadow"
												  ShadowDepth="3"
												  BlurRadius="8"
												  Color="#7F7F7F"
												  Opacity=".5" />
							</Border.Effect>

							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>

								<TextBlock x:Name="OnTextBlock"
										   Grid.Column="0"
										   VerticalAlignment="Center"
										   Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsChecked, Converter={StaticResource BooleanConverter}}"
										   Text="ON"
										   FontSize="10"
										   Margin="16 0 0 0" />

								<TextBlock x:Name="OffTextBlock"
										   Grid.Column="2"
										   VerticalAlignment="Center"
										   Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsChecked, Converter={StaticResource BooleanConverter}, ConverterParameter=Inverted}"
										   FontSize="10"
										   Text="OFF"
										   Margin="0 0 10 0" />
							</Grid>
						</Border>

						<Border x:Name="CircleIndicatorBorder"
								Width="26"
								Height="26"
								Background="#f9f9f9"
								BorderBrush="#a0a0a0"
								BorderThickness="1"
								CornerRadius="16"
								Cursor="Hand"
								Margin="5">
							<Border.Effect>
								<DropShadowEffect x:Name="CircleIndicatorShadow"
												  ShadowDepth="4"
												  BlurRadius="8"
												  Color="#7F7F7F"
												  Opacity=".3" />
							</Border.Effect>

							<Border.RenderTransform>
								<TranslateTransform X="0" />
							</Border.RenderTransform>
						</Border>
					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked"
								 Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="CircleIndicatorBorder"
														 Storyboard.TargetProperty="RenderTransform.(TranslateTransform.X)"
														 To="18"
														 Duration="0:0:0.2" />
										<DoubleAnimation Storyboard.TargetName="CircleIndicatorShadow"
														 Storyboard.TargetProperty="Direction"
														 To="0"
														 Duration="0:0:0.1" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="CircleIndicatorBorder"
														 Storyboard.TargetProperty="RenderTransform.(TranslateTransform.X)"
														 To="-18"
														 Duration="0:0:0.2" />
										<DoubleAnimation Storyboard.TargetName="CircleIndicatorShadow"
														 Storyboard.TargetProperty="Direction"
														 To="-180"
														 Duration="0:0:0.1" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>

						<Trigger Property="IsChecked"
								 Value="False">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="CircleIndicatorBorder"
														 Storyboard.TargetProperty="RenderTransform.(TranslateTransform.X)"
														 To="-18"
														 Duration="0:0:0.2" />
										<DoubleAnimation Storyboard.TargetName="CircleIndicatorShadow"
														 Storyboard.TargetProperty="Direction"
														 To="-180"
														 Duration="0:0:0.1" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="CircleIndicatorBorder"
														 Storyboard.TargetProperty="RenderTransform.(TranslateTransform.X)"
														 To="18"
														 Duration="0:0:0.2" />
										<DoubleAnimation Storyboard.TargetName="CircleIndicatorShadow"
														 Storyboard.TargetProperty="Direction"
														 To="0"
														 Duration="0:0:0.1" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type local:ToggleOption}">
		<Setter Property="Focusable"
				Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type local:ToggleOption}">
					<Border BorderThickness="1 1 2 2"
							BorderBrush="#d4d4d4"
							CornerRadius="8"
							Padding="24 8">
						<Border.Effect>
							<DropShadowEffect ShadowDepth="2"
											  BlurRadius="8"
											  Color="#e0e0e0"
											  Opacity="5" />
						</Border.Effect>

						<Border.Style>
							<Style TargetType="Border">
								<Setter Property="Background"
										Value="#f9f9f9" />
								<Style.Triggers>
									<Trigger Property="IsMouseOver"
											 Value="True">
										<Trigger.EnterActions>
											<BeginStoryboard>
												<Storyboard>
													<ColorAnimation Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"
																	To="#f0f0f0"
																	Duration="0:0:0.1" />
												</Storyboard>
											</BeginStoryboard>
										</Trigger.EnterActions>
										<Trigger.ExitActions>
											<BeginStoryboard>
												<Storyboard>
													<ColorAnimation Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"
																	To="#f9f9f9"
																	Duration="0:0:0.3" />
												</Storyboard>
											</BeginStoryboard>
										</Trigger.ExitActions>
									</Trigger>
								</Style.Triggers>
							</Style>
						</Border.Style>

							<Grid Grid.Row="0"
								  Grid.Column="0">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>

								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="*" />
								</Grid.RowDefinitions>

								<CheckBox Grid.Column="0"
										  x:Name="ToggleCheckBox"
										  Style="{StaticResource SwitchCheckBoxStyle}"
										  Content="{TemplateBinding CheckBoxContent}"
										  IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Checked}"
										  HorizontalAlignment="Left"
										  VerticalAlignment="Center"
										  Margin="0 0 4 0" />

							<TextBlock Grid.Row="1"
									   Grid.Column="0"
									   Grid.ColumnSpan="5"
									   Text="{TemplateBinding DescriptionText}"
									   FontSize="10"
									   TextWrapping="Wrap"
									   Focusable="True" />
									  
								<TextBlock Grid.Column="1"
										   Text="{TemplateBinding CheckBoxContent}"
										   FontSize="16"
										   FontWeight="DemiBold"
										   Focusable="False"
										   TextWrapping="Wrap"
										   VerticalAlignment="Center"
										   Margin="8 0" />

								<TextBox Grid.Column="2"
										 Grid.ColumnSpan="2"
										 Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TextBoxText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
										 Style="{StaticResource WatermarkTextBox}"
										 local:TextBoxWatermarkHelper.WatermarkText="{TemplateBinding CheckBoxContent}"
										 local:TextBoxWatermarkHelper.IsWatermarkVisible="True"
										 local:TextBoxWatermarkHelper.ButtonCommand="{TemplateBinding ClearButtonCommand}"
										 local:TextBoxWatermarkHelper.ButtonCommandParameter="{TemplateBinding ClearButtonParameter}"
										 Height="24"
										 VerticalContentAlignment="Center"
										 TextWrapping="Wrap">
									<TextBox.Visibility>
										<MultiBinding Converter="{StaticResource MultiBooleanConverter}">
											<Binding Path="TextBoxVisible"
													 RelativeSource="{RelativeSource TemplatedParent}" />
											<Binding Path="IsChecked"
													 ElementName="ToggleCheckBox" />
										</MultiBinding>
									</TextBox.Visibility>
								</TextBox>

								<TextBlock Grid.Column="3"
										   Text="{TemplateBinding TextBlockText}"
										   Visibility="{TemplateBinding TextBlockVisibility, Converter={StaticResource BooleanConverter}}"
										   Focusable="True"
										   TextWrapping="Wrap"
										   VerticalAlignment="Center"
										   HorizontalAlignment="Left"
										   Margin="0 4 0 0" />

								<Button x:Name="ActionButton"
										Grid.Column="4"
										Content="{TemplateBinding ButtonContent}"
										Style="{StaticResource Sdl.Button.PrimaryStyle}"
										Command="{TemplateBinding ButtonCommand}"
										CommandParameter="{TemplateBinding ButtonParameter}"
										Width="80"
										Height="24"
										Cursor="Hand"
										Margin="16 0 0 0"
										Padding="0">
									<Button.Visibility>
										<MultiBinding Converter="{StaticResource MultiBooleanConverter}">
											<Binding Path="IsChecked"
													 ElementName="ToggleCheckBox" />
											<Binding Path="ButtonContent"
													 RelativeSource="{RelativeSource TemplatedParent}">
												<Binding.Converter>
													<converters:EmptyStringToBooleanConverter />
												</Binding.Converter>
											</Binding>
										</MultiBinding>
									</Button.Visibility>
								</Button>
						</Grid>

					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>