<Window x:Class="LanguageWeaverProvider.View.CredentialsMainView"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:root="clr-namespace:LanguageWeaverProvider"
		xmlns:local="clr-namespace:LanguageWeaverProvider.ViewModel"
		xmlns:edgeView="clr-namespace:LanguageWeaverProvider.View.Edge"
		xmlns:cloudView="clr-namespace:LanguageWeaverProvider.View.Cloud"
		xmlns:edgeViewModel="clr-namespace:LanguageWeaverProvider.ViewModel.Edge"
		xmlns:cloudViewModel="clr-namespace:LanguageWeaverProvider.ViewModel.Cloud"
		xmlns:converters="clr-namespace:LanguageWeaverProvider.Converters"
		mc:Ignorable="d"
		d:DataContext="{d:DesignInstance local:CredentialsMainViewModel}"
		MouseLeftButtonDown="Window_MouseLeftButtonDown"
		BorderThickness="1"
		BorderBrush="#c0c0c0"
		WindowStartupLocation="CenterScreen"
		Title="Language Weaver Provider"
		ResizeMode="NoResize"
		WindowStyle="None"
		Height="500"
		Width="600"
		FontFamily="Segoe UI"
		d:DesignHeight="450"
		d:DesignWidth="600">

	<Window.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="/Sdl.Desktop.Platform.Styles;component/ButtonResources.xaml" />
				<ResourceDictionary Source="/Sdl.Desktop.Platform.Styles;component/TextBoxResources.xaml" />
			</ResourceDictionary.MergedDictionaries>

			<Style TargetType="Image">
				<Setter Property="RenderOptions.BitmapScalingMode"
						Value="HighQuality" />
			</Style>

			<converters:InvertedBoolean x:Key="InvertedBoolean" />
			<converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
			<converters:EnumToVisibilityConverter x:Key="EnumToVisibility" />

			<DataTemplate DataType="{x:Type cloudViewModel:CloudCredentialsViewModel}">
				<cloudView:CloudCredentialsView />
			</DataTemplate>

			<DataTemplate DataType="{x:Type edgeViewModel:EdgeCredentialsViewModel}">
				<edgeView:EdgeCredentialsView />
			</DataTemplate>
		</ResourceDictionary>
	</Window.Resources>

	<Border>
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="*" />
			</Grid.RowDefinitions>

			<Image Grid.Row="0"
				   Source="../Resources/lwMainLogo.png"
				   Margin="48 24 48 0" />

			<Border Grid.Row="1"
					Visibility="{Binding IsServiceSelected, Converter={StaticResource BooleanToVisibilityConverter}}"
					IsEnabled="{Binding IsUserAttemptingLogin, Converter={StaticResource InvertedBoolean}}"
					Background="#ffffff"
					CornerRadius="2"
					Margin="24"
					Padding="12 24 12 12">
				<Border.Effect>
					<DropShadowEffect ShadowDepth="0"
									  Color="#d4d4d4"
									  Opacity="1" />
				</Border.Effect>
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="*" />
						<RowDefinition Height="Auto" />
					</Grid.RowDefinitions>

					<TextBox Style="{StaticResource Sdl.TextBox.BorderlessReadOnlyStyle}"
							 Cursor="Arrow"
							 Visibility="{Binding ProviderView.AuthenticationType, Converter={StaticResource EnumToVisibility}, ConverterParameter={x:Static root:AuthenticationType.CloudCredentials}}"
							 Text="You've chosen User Credentials Authentication. Please enter your email and password to proceed."
							 FontSize="14"
							 HorizontalAlignment="Center" />

					<StackPanel Grid.Row="0"
								Visibility="{Binding ProviderView.AuthenticationType, Converter={StaticResource EnumToVisibility}, ConverterParameter={x:Static root:AuthenticationType.CloudAPI}}">
						<TextBox Style="{StaticResource Sdl.TextBox.BorderlessReadOnlyStyle}"
								 Cursor="Arrow"
								 Text="You've chosen Client Secret Authentication. Please provide the generated client secret for access."
								 FontSize="14"
								 HorizontalAlignment="Center" />
						<Button Style="{StaticResource Sdl.Button.HyperLinkStyle}"
								Command="{Binding OpenHyperlinkCommand}"
								CommandParameter="{x:Static root:Constants.LanguageWeaverEUPortal}"
								HorizontalAlignment="Left"
								Cursor="Hand"
								Margin="16 8 16 0">
							<Button.Content>
								<TextBlock Text="Please note that only administrators can retrieve the Client ID and Client Secret."
										   TextWrapping="Wrap" />
							</Button.Content>
						</Button>
					</StackPanel>

					<TextBox Style="{StaticResource Sdl.TextBox.BorderlessReadOnlyStyle}"
							 Cursor="Arrow"
							 Visibility="{Binding ProviderView.AuthenticationType, Converter={StaticResource EnumToVisibility}, ConverterParameter={x:Static root:AuthenticationType.EdgeCredentials}}"
							 Text="You've chosen User Credentials Authentication. Please enter your host, email and password to proceed."
							 FontSize="14"
							 HorizontalAlignment="Center" />

					<TextBox Style="{StaticResource Sdl.TextBox.BorderlessReadOnlyStyle}"
							 Cursor="Arrow"
							 Visibility="{Binding ProviderView.AuthenticationType, Converter={StaticResource EnumToVisibility}, ConverterParameter={x:Static root:AuthenticationType.EdgeApiKey}}"
							 Text="You've chosen User API Key Authentication. Please enter your API Key for access."
							 FontSize="14"
							 HorizontalAlignment="Center" />

					<TextBox Style="{StaticResource Sdl.TextBox.BorderlessReadOnlyStyle}"
							 Cursor="Arrow"
							 Text="{x:Static root:PluginResources.MainView_AuthMethods_HelpMessage}"
							 Visibility="{Binding ProviderView.IsAuthenticationTypeSelected, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=Inverted}"
							 FontSize="14" 
							 HorizontalAlignment="Center"/>

					<StackPanel Grid.Row="1">
						<ContentControl Content="{Binding ProviderView}"
										Focusable="False"
										Margin="0 8"
										Grid.Row="1"
										VerticalAlignment="Bottom" />

						<Button Content="{x:Static root:PluginResources.MainView_AuthMethods_BackBttn}"
								Command="{Binding BackCommand}"
								Style="{StaticResource Sdl.Button.SecondaryStyle}"
								Cursor="Hand"
								Width="200"
								Grid.Row="2"
								VerticalAlignment="Bottom"
								Margin="0 0 0 8" />
					</StackPanel>
				</Grid>
			</Border>

			<Border Grid.Row="1"
					Visibility="{Binding IsServiceSelected, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=Inverted}"
					IsEnabled="{Binding IsUserAttemptingLogin, Converter={StaticResource InvertedBoolean}}"
					Background="#ffffff"
					CornerRadius="4"
					Margin="24"
					Padding="12 24 12 12">
				<Border.Effect>
					<DropShadowEffect ShadowDepth="0"
									  Color="#d4d4d4"
									  Opacity="1" />
				</Border.Effect>
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>

					<TextBox Grid.Row="0"
							 Style="{StaticResource Sdl.TextBox.BorderlessReadOnlyStyle}"
							 Cursor="Arrow"
							 Text="{x:Static root:PluginResources.MainView_HelpMessage}"
							 FontSize="14"
							 HorizontalAlignment="Center" />

					<StackPanel Grid.Row="1"
								VerticalAlignment="Bottom">
						
						<Button Content="{x:Static root:PluginResources.MainView_Buttons_LWCloud}"
								ToolTip="{x:Static root:PluginResources.MainView_Buttons_LWCloud_ToolTip}"
								Style="{StaticResource Sdl.Button.PrimaryStyle}"
								Command="{Binding SelectLanguageWeaverServiceCommand}"
								CommandParameter="{x:Static root:Constants.CloudService}"
								Cursor="Hand"
								Width="200"
								Margin="0 8" />

						<Button Content="{x:Static root:PluginResources.MainView_Buttons_LWEdge}"
								ToolTip="{x:Static root:PluginResources.MainView_Buttons_LWEdge_ToolTip}"
								Style="{StaticResource Sdl.Button.PrimaryStyle}"
								Command="{Binding SelectLanguageWeaverServiceCommand}"
								CommandParameter="{x:Static root:Constants.EdgeService}"
								Cursor="Hand"
								Width="200"
								Margin="0 8" />

						<Button Content="{x:Static root:PluginResources.MainView_Buttons_Exit}"
								Command="{Binding CloseCommand}"
								Style="{StaticResource Sdl.Button.SecondaryStyle}"
								Cursor="Hand"
								Width="200"
								Margin="0 8" />
					</StackPanel>
				</Grid>
			</Border>

			<Grid Grid.Row="1"
				  VerticalAlignment="Bottom"
				  Visibility="{Binding IsUserAttemptingLogin, Converter={StaticResource BooleanToVisibilityConverter}}">
				<Grid.RowDefinitions>
					<RowDefinition Height="*" />
				</Grid.RowDefinitions>

				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>

				<Border BorderThickness="0 1 0 0"
						BorderBrush="#D3D3D3"
						VerticalAlignment="Bottom"
						Grid.Column="0"
						Grid.Row="1"
						Height="22"
						Margin="0 0 0 0"
						Grid.ColumnSpan="3">
					<Rectangle>
						<Rectangle.Fill>
							<LinearGradientBrush StartPoint="0,0"
												 EndPoint="1,0">
								<GradientStop x:Name="gradientTransparent"
											  Color="Transparent"
											  Offset="1" />
								<GradientStop x:Name="gradientColored"
											  Color="#008080"
											  Offset="0" />
							</LinearGradientBrush>
						</Rectangle.Fill>
					</Rectangle>

					<Border.Triggers>
						<EventTrigger RoutedEvent="FrameworkElement.Loaded">
							<BeginStoryboard>
								<Storyboard RepeatBehavior="Forever">

									<DoubleAnimation Storyboard.TargetName="gradientTransparent"
													 Storyboard.TargetProperty="Offset"
													 From="-0.5"
													 To="-0.5"
													 Duration="0:0:0" />

									<DoubleAnimation Storyboard.TargetName="gradientColored"
													 Storyboard.TargetProperty="Offset"
													 From="-0.5"
													 To="-0.5"
													 Duration="0:0:0" />

									<DoubleAnimation Storyboard.TargetName="gradientTransparent"
													 Storyboard.TargetProperty="Offset"
													 From="-0.5"
													 To="1.5"
													 Duration="0:0:0.5" />

									<DoubleAnimation Storyboard.TargetName="gradientColored"
													 Storyboard.TargetProperty="Offset"
													 From="-0.5"
													 To="1.5"
													 BeginTime="0:0:0.5"
													 Duration="0:0:0.5" />

									<DoubleAnimation Storyboard.TargetName="gradientColored"
													 Storyboard.TargetProperty="Offset"
													 From="-0.5"
													 To="-0.5"
													 BeginTime="0:0:1"
													 Duration="0:0:0" />

									<DoubleAnimation Storyboard.TargetName="gradientTransparent"
													 Storyboard.TargetProperty="Offset"
													 From="-0.5"
													 To="-0.5"
													 BeginTime="0:0:1"
													 Duration="0:0:0" />

									<DoubleAnimation Storyboard.TargetName="gradientColored"
													 Storyboard.TargetProperty="Offset"
													 From="-0.5"
													 To="1.5"
													 BeginTime="0:0:1"
													 Duration="0:0:0.5" />

									<DoubleAnimation Storyboard.TargetName="gradientTransparent"
													 Storyboard.TargetProperty="Offset"
													 From="-0.5"
													 To="1.5"
													 BeginTime="0:0:1.5"
													 Duration="0:0:0.5" />
								</Storyboard>

							</BeginStoryboard>
						</EventTrigger>
					</Border.Triggers>
				</Border>

				<TextBlock Text="{Binding CurrentActionMessage}"
						   FontWeight="DemiBold"
						   Grid.Row="1"
						   Grid.Column="2"
						   HorizontalAlignment="Right"
						   VerticalAlignment="Bottom"
						   Margin="0 0 24 3">
					<TextBlock.Effect>
						<DropShadowEffect ShadowDepth="0"
										  Color="#f4f4f4"
										  Opacity="3"
										  BlurRadius="7" />
					</TextBlock.Effect>
				</TextBlock>

			</Grid>
		</Grid>
	</Border>
</Window>