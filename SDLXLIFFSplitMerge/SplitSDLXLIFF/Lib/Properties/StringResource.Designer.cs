//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sdl.Utilities.SplitSDLXLIFF.Lib.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class StringResource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal StringResource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Sdl.Utilities.SplitSDLXLIFF.Lib.Properties.StringResource", typeof(StringResource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}\{1}.splits.
        /// </summary>
        internal static string dirSplitFiles {
            get {
                return ResourceManager.GetString("dirSplitFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}\{1}_{2}.splits.
        /// </summary>
        internal static string dirSplitFilesFromProject {
            get {
                return ResourceManager.GetString("dirSplitFilesFromProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot merge files. Possible reasons: 1 - Original file was modified after the split. 2 - Split files do not correspond the indicated original file..
        /// </summary>
        internal static string errCanNotMerge {
            get {
                return ResourceManager.GetString("errCanNotMerge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory &apos;{0}&apos; does not exist..
        /// </summary>
        internal static string errDirectoryNotExist {
            get {
                return ResourceManager.GetString("errDirectoryNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file is corrupt..
        /// </summary>
        internal static string errFileCorrupt {
            get {
                return ResourceManager.GetString("errFileCorrupt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file contains no content..
        /// </summary>
        internal static string errFileEmpty {
            get {
                return ResourceManager.GetString("errFileEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File &apos;{0}&apos; does not exist..
        /// </summary>
        internal static string errFileNotExist {
            get {
                return ResourceManager.GetString("errFileNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected file structure. Please, try to resave the file in SDL Trados Studio and try again..
        /// </summary>
        internal static string errFileUnexpectedStructure {
            get {
                return ResourceManager.GetString("errFileUnexpectedStructure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No files to merge found in directory {0}..
        /// </summary>
        internal static string errNoFilesToMerge {
            get {
                return ResourceManager.GetString("errNoFilesToMerge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of parts to split file to was out of range..
        /// </summary>
        internal static string errPartsCountOutOfRange {
            get {
                return ResourceManager.GetString("errPartsCountOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max Percent for word-count was out of range..
        /// </summary>
        internal static string errPercentOutOfRange {
            get {
                return ResourceManager.GetString("errPercentOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Split file &apos;{0}&apos; not found..
        /// </summary>
        internal static string errSplitFileNotFound {
            get {
                return ResourceManager.GetString("errSplitFileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trans-unit &apos;{0}&apos; not found in file &apos;{1}&apos;. Trans-unit number in split file is {2}..
        /// </summary>
        internal static string errTUNotFound {
            get {
                return ResourceManager.GetString("errTUNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total Number for words found in file &apos;{0}&apos; is too small to split it into {1} parts..
        /// </summary>
        internal static string errWordCalcOutOfRange {
            get {
                return ResourceManager.GetString("errWordCalcOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max Words Number for word-count was out of range..
        /// </summary>
        internal static string errWordCountOutOfRange {
            get {
                return ResourceManager.GetString("errWordCountOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to backup.
        /// </summary>
        internal static string extBackup {
            get {
                return ResourceManager.GetString("extBackup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to splitinfo.
        /// </summary>
        internal static string extSplitInfo {
            get {
                return ResourceManager.GetString("extSplitInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ATTENTION: Segment ID &apos;{0}&apos; was not found in file.\r\n.
        /// </summary>
        internal static string wrnSegNotFound {
            get {
                return ResourceManager.GetString("wrnSegNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ATTENTION: Cannot split file directly after segment ID &apos;{0}&apos;.\r\nThis segment is followed by another segment in translation unit/group and split operation can be performed only after the last segment in translation unit/group.\r\n.
        /// </summary>
        internal static string wrnSegWrongSplit {
            get {
                return ResourceManager.GetString("wrnSegWrongSplit", resourceCulture);
            }
        }
    }
}
