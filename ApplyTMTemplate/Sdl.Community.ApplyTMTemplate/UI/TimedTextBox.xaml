<UserControl x:Class="Sdl.Community.ApplyTMTemplate.UI.TimedTextBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:applyTmTemplate="clr-namespace:Sdl.Community.ApplyTMTemplate"
             d:DataContext="{d:DesignInstance viewModels:TimedTextBox}"
             xmlns:ui="clr-namespace:Sdl.Community.ApplyTMTemplate.UI"
             xmlns:viewModels="clr-namespace:Sdl.Community.ApplyTMTemplate.ViewModels"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
	<UserControl.Resources>

		<ResourceDictionary>

			<ControlTemplate x:Key="Unpressed" TargetType="{x:Type Button}">
					<Image Source="../Resources/DropDownTriangle.ico" />
			</ControlTemplate>

			<ControlTemplate x:Key="Pressed" TargetType="{x:Type Button}">
				<Image Source="../Resources/GreenDropDown.ico" />
			</ControlTemplate>

			<Style x:Key="MenuButtonStyle" TargetType="{x:Type Button}">
				<Setter Property="Height" Value="30"/>
				<Setter Property="Background" Value="White" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Border Background="{TemplateBinding Background}" BorderBrush="White" BorderThickness="0">
								<ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" />
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<Trigger Property="IsMouseOver" Value="True">
						<Setter Property="Background" Value="#CDE5F6" />
					</Trigger>
				</Style.Triggers>
			</Style>

			<Style x:Key="TextBlockStyle" TargetType="{x:Type TextBlock}">
				<Setter Property="Padding" Value="5"/>
				<Setter Property="FontSize" Value="12"/>
				<Setter Property="FontFamily" Value="Calibri"/>
				<Setter Property="SnapsToDevicePixels" Value="True"/>
			</Style>

			<Style x:Key="StackPanelStyle" TargetType="{x:Type StackPanel}">
				<Setter Property="Margin" Value="2"/>
			</Style>

		</ResourceDictionary>

	</UserControl.Resources>
	<Border BorderBrush="Gray"
	        BorderThickness="0.5"
	        VerticalAlignment="Center"
	        Height="30">
		<DockPanel>
			<StackPanel DockPanel.Dock="Right" VerticalAlignment="Center">
				<Button Height="20"
						Margin="0,0,8,0"
				        Background="White" BorderBrush="White"
				        Command="{Binding MenuCommand}"
						HorizontalAlignment="Right">
					<Button.Style>
						<Style TargetType="{x:Type Button}">
							<Setter Property="Template" Value="{StaticResource Unpressed}" />
							<Style.Triggers>
								<Trigger Property="IsPressed" Value="True">
									<Setter Property="Template" Value="{StaticResource Pressed}" />
								</Trigger>
							</Style.Triggers>
						</Style>
					</Button.Style>
				</Button>
				<Canvas Width="Auto">
				<Popup IsOpen="{Binding IsOpen}" 
				       Height="Auto"
					   Width="300"
				       PopupAnimation="Fade"
					   StaysOpen="False"
				       AllowsTransparency="True"
					   Placement="Left"
				       HorizontalAlignment="Right">
					
						<Border BorderBrush="Black"
						        BorderThickness="0.8"
						        SnapsToDevicePixels="True">
							<StackPanel Background="WhiteSmoke">

								<Button Style="{StaticResource MenuButtonStyle}"
								        Command="{Binding BrowseCommand}"
								        HorizontalContentAlignment="Left">
									<StackPanel Style="{StaticResource StackPanelStyle}" Orientation="Horizontal">
										<Image Source="../Resources/LanguageResourceTemplate.ico"/>
										<TextBlock Style="{StaticResource TextBlockStyle}"
										           Text="{x:Static applyTmTemplate:PluginResources.Choose_Template}" />
										
									</StackPanel>
								</Button>

								<Button Style="{StaticResource MenuButtonStyle}"
								        Name="ImportFromTms"
								        Command="{Binding ImportCommand}"
								        CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
									<StackPanel Style="{StaticResource StackPanelStyle}" Orientation="Horizontal">
										<Image Source="../Resources/FileBasedTM.ico" />
										<TextBlock Style="{StaticResource TextBlockStyle}"
										           Text="{x:Static applyTmTemplate:PluginResources.Import_Tms_To_Template}" />
									</StackPanel>
								</Button>

								<Button Name="ImportFromExcel"
								        Style="{StaticResource MenuButtonStyle}"
								        Command="{Binding ImportCommand}"
								        CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
									<StackPanel Orientation="Horizontal" Style="{StaticResource StackPanelStyle}">
										<Image Source="../Resources/UploadFromExcel.ico" />
										<TextBlock Style="{StaticResource TextBlockStyle}"
										           Text="{x:Static applyTmTemplate:PluginResources.Import_Excel_To_Template}" />
									</StackPanel>
									
								</Button>

								<Button Name="ExportToExcel"
								        Style="{StaticResource MenuButtonStyle}"
								        Command="{Binding ExportCommand}">
									<StackPanel Orientation="Horizontal" Style="{StaticResource StackPanelStyle}">
										<Image Source="../Resources/SaveToExcel.ico"/>
										<TextBlock Style="{StaticResource TextBlockStyle}"
										           Text="{x:Static applyTmTemplate:PluginResources.Export_To_Excel}" />
									</StackPanel>
								</Button>
							</StackPanel>
						</Border>
				</Popup>
				</Canvas>
			</StackPanel>
			<TextBox DockPanel.Dock="Left" BorderBrush="White"
					 FontFamily="Calibri"
					 FontSize="16"
					 VerticalAlignment="Center" VerticalContentAlignment="Center"
			         Height="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ui:TimedTextBox}, Path=Height}"
			         Text="{Binding Path, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
				<TextBox.Style>
					<Style TargetType="TextBox">
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type TextBox}">
									<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
										<ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
									</Border>
									<ControlTemplate.Triggers>
										<Trigger Property="IsEnabled" Value="false">
											<Setter Property="Opacity" TargetName="border" Value="0.56"/>
										</Trigger>
										<Trigger Property="IsMouseOver" Value="true">
											<Setter Property="BorderBrush" TargetName="border" Value="White"/>
										</Trigger>
										<Trigger Property="IsFocused" Value="true">
											<Setter Property="BorderBrush" TargetName="border" Value="White"/>
										</Trigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				</TextBox.Style>
			</TextBox>
		</DockPanel>
	</Border>
</UserControl>
